/*  $Id$
**
**  Here be #define's for filenames, socket names, environment variables,
**  and so on.  The numbers refer to sections in the config.dist file.
*/

/* 
    Autogenerated by configure 
 */

/*
   Default prefix path for these is pathbin - the default can be
   overridden by making these a full path
*/
#define _PATH_NNRPD		"nnrpd"
#define _PATH_NNTPD		"nnrpd"
#define _PATH_AUTHDIR		"auth"
#define _PATH_CTLINND		"ctlinnd"
#define _PATH_RNEWSPROGS	"rnews.libexec"
/* Prefix path is pathfilter */
#define _PATH_TCL_STARTUP	"startup.tcl"
#define _PATH_TCL_FILTER	"filter.tcl"
#define _PATH_PERL_STARTUP_INND	"startup_innd.pl"
#define _PATH_PERL_FILTER_INND	"filter_innd.pl"
#define _PATH_PERL_FILTER_NNRPD	"filter_nnrpd.pl"

/* Default prefix path is pathrun */
#define _PATH_NNTPCONNECT	"nntpin"
#define _PATH_NEWSCONTROL	"control"
#define _PATH_TEMPSOCK		"ctlinndXXXXXX"
#define _PATH_SERVERPID		"innd.pid"

/* Default prefix path is pathdb */
#define _PATH_HISTORY		"history"
#define _PATH_ACTIVE		"active"
#define _PATH_NEWACTIVE		"active.tmp"
#define _PATH_OLDACTIVE		"active.old"
#define _PATH_ACTIVETIMES	"active.times"
#define _PATH_NEWSGROUPS	"newsgroups"

/* Default prefix path is pathetc */
#define _PATH_NEWSFEEDS		"newsfeeds"
#define _PATH_INNDHOSTS		"incoming.conf"
#define _PATH_DISTPATS		"distrib.pats"
#define _PATH_NNRPDIST		"distributions"
#define _PATH_NNRPSUBS		"subscriptions"
#define _PATH_CONFIG		"@prefix@/etc/inn.conf"
#define _PATH_CLIENTACTIVE	"active"
#define _PATH_MODERATORS	"moderators"
#define _PATH_SERVER		"server"
#define _PATH_NNTPPASS		"passwd.nntp"
#define _PATH_NNRPACCESS	"nnrp.access"
#define _PATH_EXPIRECTL		"expire.ctl"
#define _PATH_SCHEMA		"overview.fmt"
#define _PATH_MOTD		"motd.news"
#define _PATH_STORAGECTL	"storage.ctl"
#define _PATH_OVERVIEWCTL	"overview.ctl"

/* Default prefix path is pathspool */
#define _PATH_SPOOL		"articles"
#define _PATH_BADNEWS		"bad"

/* Default prefix path is pathlog */
#define _PATH_LOGFILE		"news"
#define _PATH_ERRLOG		"errlog"

    /* =()<#define _PATH_SH		"@<_PATH_SH>@">()= */
#define _PATH_SH		"/bin/sh"
    /* =()<#define _PATH_COMPRESS	"@<_PATH_COMPRESS>@">()= */
#define _PATH_COMPRESS	"/usr/bin/compress"
    /* =()<#define _PATH_TMP	"@<_PATH_TMP>@">()= */
#define _PATH_TMP	"/var/tmp"
    /* =()<#define _PATH_GZIP	"@<_PATH_GZIP>@">()= */
#define _PATH_GZIP	"/usr/bin/gzip"

    /* =()<#define _PATH_SPOOLTEMP	"@<_PATH_SPOOLTEMP>@">()= */
#define _PATH_SPOOLTEMP	"/var/tmp"
    /* =()<#define _PATH_RELBAD		"@<_PATH_RELBAD>@">()= */
#define _PATH_RELBAD		"bad"

/*
**  9.  EXECUTION PATHS FOR INND AND RNEWS
*/
    /* =()<#define _PATH_RNEWS_DUP_LOG	"@<_PATH_RNEWS_DUP_LOG>@">()= */
#define _PATH_RNEWS_DUP_LOG	"/dev/null"
    /* =()<#define _PATH_BADCONTROLPROG	"@<_PATH_BADCONTROLPROG>@">()= */
#define _PATH_BADCONTROLPROG	"default"


    /* =()<#define _PATH_TEMPACTIVE	"@<_PATH_TEMPACTIVE>@">()= */
#define _PATH_TEMPACTIVE	"/var/tmp/activeXXXXXX"
    /* =()<#define _PATH_TEMPMODERATORS	"@<_PATH_TEMPMODERATORS>@">()= */
#define _PATH_TEMPMODERATORS	"/var/tmp/moderatorsXXXXXX"

/*
**  ENVIRONMENT VARIABLES
*/
    /* The host name of the NNTP server, for client posting. */
#define _ENV_NNTPSERVER		"NNTPSERVER"
    /* The Organization header line, for client posting. */
#define _ENV_ORGANIZATION	"ORGANIZATION"
    /* What to put in the From line, for client posting. */
#define _ENV_FROMHOST		"FROMHOST"
    /* =()<#define _ENV_UUCPHOST	"@<_ENV_UUCPHOST>@">()= */
#define _ENV_UUCPHOST	"UU_MACHINE"
#define _ENV_INNBINDADDR	"INND_BIND_ADDRESS"


/*
**  PARAMETERS IN THE _PATH_CONFIG FILE.
*/
    /* Host for the From line; default is FQDN. */
#define _CONF_FROMHOST		"fromhost"
    /* NNTP server to post to, if getenv(_ENV_NNTPSERVER) is NULL. */
#define _CONF_SERVER		"server"
    /* Host for the Path line; default is FQDN. */
#define _CONF_PATHHOST		"pathhost"
    /* Data for the Organization line if getenv(_ENV_ORGANIZATION) is NULL. */
#define _CONF_ORGANIZATION	"organization"
    /* Default host to mail moderated articles to. */
#define _CONF_MODMAILER		"moderatormailer"
    /* Default domain of local host. */
#define _CONF_DOMAIN		"domain"
    /* Default mime version. */
#define _CONF_MIMEVERSION	"mime-version"
    /* Default Content-Type */
#define _CONF_CONTENTTYPE	"mime-contenttype"
    /* Default encoding */
#define _CONF_ENCODING		"mime-encoding"
    /* Size of the history cache in kilobytes */
#define _CONF_HISCACHESIZE	"hiscachesize"
    /* Toggle for wireformat articles */
#define _CONF_WIREFORMAT        "wireformat"
    /* Toggle for Xref: slaving */
#define _CONF_XREFSLAVE         "xrefslave"
    /* Address for X-Complaints-To: header */
#define _CONF_COMPLAINTS        "complaints"
    /* if true, always spool, else, spool only on error */
#define _CONF_NNRP_SPOOLFIRST   "spoolfirst"
   /* if false then don't write crossposts to the history file */
#define _CONF_WRITELINKS        "writelinks"
   /* if 0 or false then don't monitor performance,
      otherwise, the reporting interval */
#define _CONF_TIMER		"timer"
   /* if 0 or false then don't update status file,
      otherwise, the reporting interval */
#define _CONF_STATUS		"status"
   /* Whether or not to use the storage api */
#define _CONF_STORAGEAPI        "storageapi"
   /* Whether or not to mmap articles */
#define _CONF_ARTMMAP           "articlemmap"
   /* Whether or not to mmap overviews and indices */
#define _CONF_OVERMMAP          "overviewmmap"
   /* Path to MTA for moderated postings */
#define _CONF_MTA               "mta"
   /* The command for sending report/control type mail */
#define _CONF_MAILCMD		"mailcmd"
   /* Check included text on local postings */
#define _CONF_CHECK_INC_TEXT	"checkincludedtext"
   /* How many times to try to fork before giving up */
#define _CONF_MAX_FORKS		"maxforks"
   /* Largest acceptable article size; 0 allows any size */
#define _CONF_MAX_ART_SIZE	"maxartsize"
   /* Value for nice(2) call in innd's child processes */
#define _CONF_NICE_KIDS		"nicekids"
   /* Should we verify cancels to the article author */
#define _CONF_VERIFY_CANCELS	"verifycancels"
   /* Should we log cancel commands */
#define _CONF_LOG_CANCEL_COMM	"logcancelcomm"
   /* Do we want to file unwanted articles in 'junk'? */
#define _CONF_WANT_TRASH	"wanttrash"
   /* Should be put unwanted article ID's into history */
#define _CONF_REMEMBER_TRASH	"remembertrash"
   /* Check linecont against Lines: header adjust if out by this ammount */
#define _CONF_LINECOUNT_FUZZ	"linecountfuzz"
   /* INND closes channel if inactive for this long (seconds) */
#define _CONF_PEER_TIMEOUT	"peertimeout"
   /* NNRP exits if inactive for this long (seconds) */
#define _CONF_CLIENT_TIMEOUT	"clienttimeout"
   /* Allow readers when server is paused or throttled */
#define _CONF_ALLOW_READERS	"allowreaders"
   /* Allow use of the 'NEWNEWS' command by clients */
#define _CONF_ALLOW_NEWNEWS	"allownewnews"
   /* Max article size of local postings */
#define _CONF_LOCAL_MAX_ARTSIZE	"localmaxartsize"
   /* Log article sizes */
#define _CONF_LOG_ARTSIZE	"logartsize"
   /* Log by host IP address, rather than from Path line */
#define _CONF_LOG_IPADDR	"logipaddr"
   /* Wait this many seconds between noticing inactive channels */
#define _CONF_CHAN_INACT_TIME	"chaninacttime"
   /* Maximum number of incoming NNTP connections */
#define _CONF_MAX_CONNECTIONS	"maxconnections"
   /* Wait this many seconds before channel restarts */
#define _CONF_CHAN_RETRY_TIME	"chanretrytime"
   /* Drop articles that were posted this many days ago. */
#define _CONF_ART_CUTOFF	"artcutoff"
   /* Wait this many seconds before seeing if pause is ended */
#define _CONF_PAUSE_RETRY_TIME	"pauseretrytime"
   /* Put nntplink info (filename) into the log */
#define _CONF_NNTPLINK_LOG	"nntplinklog"
   /* Log NNTP activity after this many articles. */
#define _CONF_NNTP_ACT_SYNC	"nntpactsync"
   /* How many read/write failures until channel is put to sleep or closed? */
#define _CONF_BAD_IO_COUNT	"badiocount"
   /* Multiplier for sleep in EWOULDBLOCK writes (seconds) */
#define _CONF_BLOCK_BACKOFF	"blockbackoff"
   /* How many article-writes between active and history updates */
#define _CONF_ICD_SYNC_COUNT	"icdsynccount"
   /* The IP address of the interface for innd to listen on */
#define _CONF_INNBINDADDR	"bindaddress"
   /* The port for innd to listen on */
#define _CONF_INNPORT		"port"
   /* Enable/Disable the reader tracking system */
#define _CONF_READERTRACK	"readertrack"
   /* Enable/Disable stripping of To:, Cc: and Bcc: headers of local posts */
#define _CONF_STRIPPOSTCC	"strippostcc"
   /* Name of the file used to store overview data */
#define _CONF_OVERVIEWNAME	"overviewname"

   /* All the inn.conf path variables */
#define _CONF_PATHNEWS		"pathnews"
#define _CONF_PATHBIN		"pathbin"
#define _CONF_PATHETC		"pathetc"
#define _CONF_PATHCONTROL	"pathcontrol"
#define _CONF_PATHFILTER	"pathfilter"
#define _CONF_PATHRUN		"pathrun"
#define _CONF_PATHLOG		"pathlog"
#define _CONF_PATHDB		"pathdb"
#define _CONF_PATHSPOOL		"pathspool"
#define _CONF_PATHARTICLES	"patharticles"
#define _CONF_PATHOVERVIEW	"pathoverview"
#define _CONF_PATHOUTGOING	"pathoutgoing"
#define _CONF_PATHINCOMING	"pathincoming"
#define _CONF_PATHARCHIVE	"patharchive"
