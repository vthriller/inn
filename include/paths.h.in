/*  $Id$
**
**  Here be #define's for filenames, socket names, environment variables,
**  and so on.  The numbers refer to sections in the config.dist file.
*/

/* 
    Autogenerated by configure 
 */
#define _PATH_NEWSHOME		"@prefix@"

#define _PATH_NEWSBIN		"@prefix@/bin"
#define _PATH_INND		"@prefix@/bin/innd"
#define _PATH_INNDSTART		"@prefix@/bin/inndstart"
#define _PATH_NNRPD		"@prefix@/bin/nnrpd"
#define _PATH_NNTPD		"@prefix@/bin/nnrpd"
#define _PATH_RNEWS		"@prefix@/bin/rnews"
#define _PATH_AUTHDIR		"@prefix@/bin/auth"
#define _PATH_RNEWSPROGS	"@prefix@/bin/rnews.libexec"
#define _PATH_CONTROLPROGS	"@prefix@/bin/control"
#define _PATH_TCL_STARTUP	"@prefix@/bin/control/startup.tcl"
#define _PATH_TCL_FILTER	"@prefix@/bin/control/filter.tcl"
#define _PATH_PERL_STARTUP_INND	"@prefix@/bin/control/startup_innd.pl"
#define _PATH_PERL_FILTER_INND	"@prefix@/bin/control/filter_innd.pl"
#define _PATH_PERL_FILTER_NNRPD	"@prefix@/bin/control/filter_nnrpd.pl"

#define _PATH_INNDDIR		"@prefix@/run"
#define _PATH_NNTPCONNECT	"@prefix@/run/nntpin"
#define _PATH_NEWSCONTROL	"@prefix@/run/control"
#define _PATH_TEMPSOCK		"@prefix@/run/ctlinndXXXXXX"
#define _PATH_SERVERPID		"@prefix@/run/innd.pid"

#define _PATH_NEWSLIB		"@prefix@/etc"
#define _PATH_NEWSFEEDS		"@prefix@/etc/newsfeeds"
#define _PATH_HISTORY		"@prefix@/etc/history"
#define _PATH_INNDHOSTS		"@prefix@/etc/incoming.conf"
#define _PATH_ACTIVE		"@prefix@/etc/active"
#define _PATH_NEWACTIVE		"@prefix@/etc/active.tmp"
#define _PATH_OLDACTIVE		"@prefix@/etc/active.old"
#define _PATH_ACTIVETIMES	"@prefix@/etc/active.times"
#define _PATH_DISTPATS		"@prefix@/etc/distrib.pats"
#define _PATH_NNRPDIST		"@prefix@/etc/distributions"
#define _PATH_NNRPSUBS		"@prefix@/etc/subscriptions"
#define _PATH_NEWSGROUPS	"@prefix@/etc/newsgroups"
#define _PATH_CONFIG		"@prefix@/etc/inn.conf"
#define _PATH_CLIENTACTIVE	"@prefix@/etc/active"
#define _PATH_MODERATORS	"@prefix@/etc/moderators"
#define _PATH_SERVER		"@prefix@/etc/server"
#define _PATH_NNTPPASS		"@prefix@/etc/passwd.nntp"
#define _PATH_NNRPACCESS	"@prefix@/etc/nnrp.access"
#define _PATH_EXPIRECTL		"@prefix@/etc/expire.ctl"
#define _PATH_SCHEMA		"@prefix@/etc/overview.fmt"
#define _PATH_MOTD		"@prefix@/etc/motd.news"
#define _PATH_STORAGECTL	"@prefix@/etc/storage.ctl"
#define _PATH_OVERVIEWCTL	"@prefix@/etc/overview.ctl"

#define _PATH_SPOOL		"@SPOOLDIR@/articles"
#define _PATH_OVERVIEWDIR	"@SPOOLDIR@/over.view"
#define _PATH_SPOOLNEWS		"@SPOOLDIR@/in.coming"
#define _PATH_BADNEWS		"@SPOOLDIR@/in.coming/bad"
#define _PATH_BATCHDIR		"@SPOOLDIR@/out.going"
#define _PATH_ARCHIVEDIR	"@SPOOLDIR@/archive"
#define _PATH_XBATCHES		"@SPOOLDIR@/in.coming"

#define _PATH_MOST_LOGS		"@LOGDIR@"
#define _PATH_LOGFILE		"@LOGDIR@/news"
#define _PATH_ERRLOG		"@LOGDIR@/errlog"

    /* =()<#define _PATH_SENDMAIL	"@<_PATH_SENDMAIL>@">()= */
#define _PATH_SENDMAIL	"/usr/sbin/sendmail -t"
    /* =()<#define _PATH_SH		"@<_PATH_SH>@">()= */
#define _PATH_SH		"/bin/sh"
    /* =()<#define _PATH_COMPRESS	"@<_PATH_COMPRESS>@">()= */
#define _PATH_COMPRESS	"/usr/bin/compress"
    /* =()<#define _PATH_TMP	"@<_PATH_TMP>@">()= */
#define _PATH_TMP	"/var/tmp"
    /* =()<#define _PATH_GZIP	"@<_PATH_GZIP>@">()= */
#define _PATH_GZIP	"/usr/bin/gzip"

    /* =()<#define _PATH_OVERVIEW		"@<_PATH_OVERVIEW>@">()= */
#define _PATH_OVERVIEW		".overview"

    /* =()<#define _PATH_SPOOLTEMP	"@<_PATH_SPOOLTEMP>@">()= */
#define _PATH_SPOOLTEMP	"/var/tmp"
    /* =()<#define _PATH_RELBAD		"@<_PATH_RELBAD>@">()= */
#define _PATH_RELBAD		"bad"

/*
**  9.  EXECUTION PATHS FOR INND AND RNEWS
*/
    /* =()<#define _PATH_RNEWS_DUP_LOG	"@<_PATH_RNEWS_DUP_LOG>@">()= */
#define _PATH_RNEWS_DUP_LOG	"/dev/null"
    /* =()<#define _PATH_BADCONTROLPROG	"@<_PATH_BADCONTROLPROG>@">()= */
#define _PATH_BADCONTROLPROG	"default"


    /* =()<#define _PATH_TEMPACTIVE	"@<_PATH_TEMPACTIVE>@">()= */
#define _PATH_TEMPACTIVE	"/var/tmp/activeXXXXXX"
    /* =()<#define _PATH_TEMPMODERATORS	"@<_PATH_TEMPMODERATORS>@">()= */
#define _PATH_TEMPMODERATORS	"/var/tmp/moderatorsXXXXXX"

/*
**  ENVIRONMENT VARIABLES
*/
    /* The host name of the NNTP server, for client posting. */
#define _ENV_NNTPSERVER		"NNTPSERVER"
    /* The Organization header line, for client posting. */
#define _ENV_ORGANIZATION	"ORGANIZATION"
    /* What to put in the From line, for client posting. */
#define _ENV_FROMHOST		"FROMHOST"
    /* =()<#define _ENV_UUCPHOST	"@<_ENV_UUCPHOST>@">()= */
#define _ENV_UUCPHOST	"UU_MACHINE"
#define _ENV_INNBINDADDR	"INND_BIND_ADDRESS"


/*
**  PARAMETERS IN THE _PATH_CONFIG FILE.
*/
    /* Host for the From line; default is FQDN. */
#define _CONF_FROMHOST		"fromhost"
    /* NNTP server to post to, if getenv(_ENV_NNTPSERVER) is NULL. */
#define _CONF_SERVER		"server"
    /* Host for the Path line; default is FQDN. */
#define _CONF_PATHHOST		"pathhost"
    /* Data for the Organization line if getenv(_ENV_ORGANIZATION) is NULL. */
#define _CONF_ORGANIZATION	"organization"
    /* Default host to mail moderated articles to. */
#define _CONF_MODMAILER		"moderatormailer"
    /* Default domain of local host. */
#define _CONF_DOMAIN		"domain"
    /* Default mime version. */
#define _CONF_MIMEVERSION	"mime-version"
    /* Default Content-Type */
#define _CONF_CONTENTTYPE	"mime-contenttype"
    /* Default encoding */
#define _CONF_ENCODING		"mime-encoding"
    /* Size of the history cache in kilobytes */
#define _CONF_HISCACHESIZE	"hiscachesize"
    /* Toggle for wireformat articles */
#define _CONF_WIREFORMAT        "wireformat"
    /* Toggle for Xref: slaving */
#define _CONF_XREFSLAVE         "xrefslave"
    /* Address for X-Complaints-To: header */
#define _CONF_COMPLAINTS        "complaints"
    /* if true, always spool, else, spool only on error */
#define _CONF_NNRP_SPOOLFIRST   "spoolfirst"
   /* if false then don't write crossposts to the history file */
#define _CONF_WRITELINKS        "writelinks"
   /* if 0 or false then don't monitor performance,
      otherwise, the reporting interval */
#define _CONF_TIMER		"timer"
   /* if 0 or false then don't update status file,
      otherwise, the reporting interval */
#define _CONF_STATUS		"status"
   /* Whether or not to use the storage api */
#define _CONF_STORAGEAPI        "storageapi"
   /* Whether or not to mmap articles */
#define _CONF_ARTMMAP           "articlemmap"
   /* Whether or not to mmap overviews and indices */
#define _CONF_OVERMMAP          "overviewmmap"
   /* Path to MTA */
#define _CONF_MTA               "mta"
   /* Check included text on local postings */
#define _CONF_CHECK_INC_TEXT	"checkincludedtext"
   /* How many times to try to fork before giving up */
#define _CONF_MAX_FORKS		"maxforks"
   /* Largest acceptable article size; 0 allows any size */
#define _CONF_MAX_ART_SIZE	"maxartsize"
   /* Value for nice(2) call in innd's child processes */
#define _CONF_NICE_KIDS		"nicekids"
   /* Should we verify cancels to the article author */
#define _CONF_VERIFY_CANCELS	"verifycancels"
   /* Should we log cancel commands */
#define _CONF_LOG_CANCEL_COMM	"logcancelcomm"
   /* Do we want to file unwanted articles in 'junk'? */
#define _CONF_WANT_TRASH	"wanttrash"
   /* Should be put unwanted article ID's into history */
#define _CONF_REMEMBER_TRASH	"remembertrash"
   /* Check linecont against Lines: header adjust if out by this ammount */
#define _CONF_LINECOUNT_FUZZ	"linecountfuzz"
   /* INND closes channel if inactive for this long (seconds) */
#define _CONF_PEER_TIMEOUT	"peertimeout"
   /* NNRP exits if inactive for this long (seconds) */
#define _CONF_CLIENT_TIMEOUT	"clienttimeout"
   /* Allow readers when server is paused or throttled */
#define _CONF_ALLOW_READERS	"allowreaders"
   /* Allow use of the 'NEWNEWS' command by clients */
#define _CONF_ALLOW_NEWNEWS	"allownewnews"
   /* Max article size of local postings */
#define _CONF_LOCAL_MAX_ARTSIZE	"localmaxartsize"
   /* Log article sizes */
#define _CONF_LOG_ARTSIZE	"logartsize"
   /* Log by host IP address, rather than from Path line */
#define _CONF_LOG_IPADDR	"logipaddr"
   /* Wait this many seconds between noticing inactive channels */
#define _CONF_CHAN_INACT_TIME	"chaninacttime"
   /* Maximum number of incoming NNTP connections */
#define _CONF_MAX_CONNECTIONS	"maxconnections"
   /* Wait this many seconds before channel restarts */
#define _CONF_CHAN_RETRY_TIME	"chanretrytime"
   /* Drop articles that were posted this many days ago. */
#define _CONF_ART_CUTOFF	"artcutoff"
   /* Wait this many seconds before seeing if pause is ended */
#define _CONF_PAUSE_RETRY_TIME	"pauseretrytime"
   /* Put nntplink info (filename) into the log */
#define _CONF_NNTPLINK_LOG	"nntplinklog"
   /* Log NNTP activity after this many articles. */
#define _CONF_NNTP_ACT_SYNC	"nntpactsync"
   /* How many read/write failures until channel is put to sleep or closed? */
#define _CONF_BAD_IO_COUNT	"badiocount"
   /* Multiplier for sleep in EWOULDBLOCK writes (seconds) */
#define _CONF_BLOCK_BACKOFF	"blockbackoff"
   /* How many article-writes between active and history updates */
#define _CONF_ICD_SYNC_COUNT	"icdsynccount"
   /* The IP address of the interface for innd to listen on */
#define _CONF_INNBINDADDR	"bindaddress"
   /* The port for innd to listen on */
#define _CONF_INNPORT		"port"
