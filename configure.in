dnl Process this file with autoconf to produce a configure script.
AC_INIT(config/config.scoreboard)
dnl Replace the existing config.data with a message in case we abort.
echo "# configure did not complete successfully.  Resolve problems and re-run." >config/config.data
echo "# or obtain a known good config.data for your O/S" >>config/config.data

AC_PREFIX_DEFAULT(/usr/local/news)
chmod +x config.sub config.guess
AM_PROG_LIBTOOL

dnl Fix the paths
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix=$ac_default_prefix

dnl Parse the arguments

AC_ARG_WITH(tcl,
	[  --with-tcl              TCL script support [default=no]], 
	[case "${withval}" in
	  yes) DO_TCL=DO ;;
	  no)  DO_TCL=DONT ;;
	  *)   AC_MSG_ERROR(invalid argument to --with-tcl or --without-tcl) ;;
	esac],
	DO_TCL=DONT)
if test $DO_TCL = DO ; then
  TCL_LIB="-ltcl -lm"
  TCL_INC="-I/usr/local/include"
else
  TCL_LIB=""
  TCL_INC=""
fi
AC_SUBST(DO_TCL)
AC_SUBST(TCL_LIB)
AC_SUBST(TCL_INC)

AC_ARG_WITH(perl,
	[  --with-perl             Perl script support [default=no]], 
	[case "${withval}" in
	  yes) DO_PERL=DO ;;
	  no)  DO_PERL=DONT ;;
	  *)   AC_MSG_ERROR(invalid argument to --with-perl or --without-perl) ;;
	esac],
	DO_PERL=DONT)
AC_SUBST(DO_PERL)

AC_ARG_WITH(largefiles,
	[  --with-largefiles       Support for files greater than 2gb [default=no]], 
	[case "${withval}" in
	  yes) DO_LFS=DO ;;
	  no)  DO_LFS=DONT ;;
	  *)   AC_MSG_ERROR(invalid argument to --with-largefiles or --without-largefiles) ;;
	esac],
	DO_LFS=DONT)
AC_SUBST(DO_LFS)

AC_ARG_WITH(db-dir,
	[  --with-db-dir=PATH      News database files [PREFIX/db]], 
	DBDIR=$with_db_dir, 
	DBDIR=$prefix/db)
AC_SUBST(DBDIR)

AC_ARG_WITH(run-dir,
	[  --with-run-dir=PATH     News pid/runtime files [PREFIX/run]], 
	RUNDIR=$with_run_dir, 
	RUNDIR=$prefix/run)
AC_SUBST(RUNDIR)

AC_ARG_WITH(etc-dir,
	[  --with-etc-dir=PATH     News config files [PREFIX/etc]], 
	ETCDIR=$with_etc_dir, 
	ETCDIR=$prefix/etc)
AC_SUBST(ETCDIR)

AC_ARG_WITH(lib-dir,
	[  --with-lib-dir=PATH     News lib files [PREFIX/lib]], 
	LIBDIR=$with_lib_dir, 
	LIBDIR=$prefix/lib)
AC_SUBST(LIBDIR)

AC_ARG_WITH(spool-dir,
	[  --with-spool-dir=PATH   News storage [PREFIX/spool]], 
	SPOOLDIR=$with_spool_dir, 
	SPOOLDIR=$prefix/spool)
AC_SUBST(SPOOLDIR)

AC_ARG_WITH(log-dir,
	[  --with-log-dir=PATH     Logging directory [PREFIX/log]], 
	LOGDIR=$with_log_dir, 
	LOGDIR=$prefix/log)
AC_SUBST(LOGDIR)

AC_ARG_WITH(tmp-path,
	[  --with-tmp-path=PATH    Temporary files directory [PREFIX/tmp]], 
	TMPPATH=$with_tmp_path, 
	TMPPATH=$prefix/tmp)
AC_SUBST(TMPPATH)

AC_ARG_WITH(news-user,
	[  --with-news-user=USER   News user id [news]], 
	NEWSUSER=$with_news_user, 
	NEWSUSER=news)
AC_SUBST(NEWSUSER)

AC_ARG_WITH(news-group,
	[  --with-news-group=GROUP News group id [news]], 
	NEWSGRP=$with_news_group, 
	NEWSGRP=news)
AC_SUBST(NEWSGRP)

AC_ARG_WITH(news-master,
	[  --with-news-master=USER News master [usenet]], 
	NEWSMASTER=$with_news_master, 
	NEWSMASTER=usenet)
AC_SUBST(NEWSMASTER)

AC_ARG_WITH(sendmail,
	[  --with-sendmail=PATH    Specify sendmail], 
	SENDMAIL=$with_sendmail)

AC_DEFUN(AC_DECUNIX,
[AC_REQUIRE([AC_PROG_CC])dnl
AC_BEFORE([$0], [AC_TRY_COMPILE])dnl
AC_BEFORE([$0], [AC_TRY_RUN])dnl
AC_MSG_CHECKING(for Digital Unix)
if test -f /osf_boot 
then
  AC_MSG_RESULT(yes)
  DECUNIX=yes # If later tests want to check for DECUNIX
else
  AC_MSG_RESULT(no)
  DECUNIX=
fi
])

MANDIR=`eval echo $mandir`
AC_SUBST(MANDIR)

HOSTNAME=`uname -n`
AC_SUBST(HOSTNAME)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_YACC
AC_PROG_LEX
AC_PROG_RANLIB

dnl System specific
AC_AIX
AC_ISC_POSIX
AC_DECUNIX

AC_DEFUN(AC_SYS_COMPILER_FLAG,
[
  AC_MSG_CHECKING($1)
  OLD_CFLAGS="[$]CFLAGS"
  AC_CACHE_VAL(inn_cv_option_$2,
  [
    CFLAGS="[$]OLD_CFLAGS $1"
    AC_TRY_RUN([int main(){exit(0);}],inn_cv_option_$2=yes,inn_cv_option_$2=no)
  ])
  
  CFLAGS="[$]OLD_CFLAGS"
  
  if test x"[$]inn_cv_option_$2" = "xyes" ; then
    $3="[$]$3 $1"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
])

# We need some special hacks when running slowaris
AC_PATH_PROG(uname_prog,uname,no)
AC_MSG_CHECKING(operating system)
AC_CACHE_VAL(inn_cv_sys_os,
[
if test "$uname_prog" != "no"; then
  inn_cv_sys_os="`uname`"

  case "$inn_cv_sys_os" in
    SunOS)
      case "`uname -r`" in
        5.*) inn_cv_sys_os="Solaris";
      esac
    ;;
  esac
else
  inn_cv_sys_os="Not Solaris"
fi
])
AC_MSG_RESULT($inn_cv_sys_os)

case "$inn_cv_sys_os" in
  SCO*)
     case "$CFLAGS" in
       *-belf*) 
          AC_SYS_COMPILER_FLAG(-belf,sco_belf_option,CFLAGS,[],[
           case "$LDFLAGS" in
             *-belf*) ;;
             *)
	        echo "Adding -belf option to ldflags."
                LDFLAGS="$LDFLAGS -belf"
             ;;
           esac
          ])
	;;
       *)
          AC_SYS_COMPILER_FLAG(-belf,sco_belf_option,CFLAGS,[],[
           case "$LDFLAGS" in
             *-belf*) ;;
             *)
	        echo "Adding -belf option to ldflags."
                LDFLAGS="$LDFLAGS -belf"
             ;;
           esac
          ])
       ;;
     esac
  ;;

  UnixWare*)
    if test "$GCC" != "yes"; then
      # We are using built-in inline function
      CFLAGS="$CFLAGS -Kalloca"
      CXX="CC -DNO_CPLUSPLUS_ALLOCA"
    fi
  ;;
esac
AC_SUBST(CFLAGS)
AC_SUBST(CXX)
AC_SUBST(LD)
AC_SUBST(LDFLAGS)



dnl Checks for pathnames
ac_save_path="$PATH"

dnl 11/21/97 Path must be set before running.
dnl PATH="$PATH:/usr/local/sbin:/usr/local/bin:/usr/local/lib:/usr/ucb:/usr/ucb/bin:/lib:/usr/lib:/sbin:/usr/sbin"
dnl if the path mucking above must be done, we have to redo the echo test...
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
  # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
    ac_n= ac_c='
' ac_t='	'
  else
    ac_n=-n ac_c= ac_t=
  fi
else
  ac_n= ac_c='\c' ac_t=
fi


AC_PATH_PROG(PATH_CTAGS,ctags,echo)

AC_CACHE_CHECK(for path to ctags,ac_cv_subst_ctags,
ac_cv_subst_ctags=$PATH_CTAGS
if test $ac_cv_subst_ctags = echo
then
	ac_cv_subst_ctags="$ac_cv_subst_ctags"
else
	ac_cv_subst_ctags="$ac_cv_subst_ctags -t -w"
fi)
AC_SUBST(ac_cv_subst_ctags)

dnl ***************************************************
dnl Run AC_PATH_PROG when it is an error to not find something.
AC_DEFUN(AC_ENSURE_PATH_PROG, [
AC_PATH_PROG($1,$2)
if test "x${$1}" = "x"
then
AC_MSG_ERROR($2 is a required program not found in path)
fi
])

AC_ENSURE_PATH_PROG(_PATH_AWK,awk)
AC_ENSURE_PATH_PROG(_PATH_PERL,perl)
AC_ENSURE_PATH_PROG(_PATH_SED,sed)

AC_ENSURE_PATH_PROG(_PATH_EGREP,egrep)
AC_ENSURE_PATH_PROG(_PATH_SORT,sort)
AC_ENSURE_PATH_PROG(_PATH_SH,sh)

dnl # perl5.004 is not required for building, but this code is
dnl # left here in case it, or something similar, needs to be
dnl # enabled later.  For example, we should probably check the
dnl # perl version for the purposes of embedded perl.
dnl AC_MSG_CHECKING(for Perl version)
dnl $_PATH_PERL -e 'require 5.004' > /dev/null 2>&1
dnl if test $? -ne 0 ; then
dnl 	AC_MSG_ERROR(Perl 5.004 (or greater) is required)
dnl else
dnl 	perl_version=`$_PATH_PERL -e 'print $]'`
dnl	AC_MSG_RESULT($perl_version)
dnl fi

dnl Look for PGP 5.0's pgpv, or pgp if pgpv is not found
pgpverify=true
AC_PATH_PROG(_PATH_PGP,pgpv)
if test "x$_PATH_PGP" = x
then
AC_PATH_PROG(_PATH_PGP,pgp,no-pgp-found-during-configure)
if test "x$_PATH_PGP" = xno-pgp-found-during-configure
then
pgpverify=false
fi
fi
AC_SUBST(pgpverify)

dnl Look for a program that takes an ftp URL as a command line argument
dnl and retrieves the file to the current directory.
dnl Shame we can't also use lynx -source; it only writes to stdout
AC_PATH_PROGS(GETFTP,ncftp wget,$prefix/bin/simpleftp)

if test "x$DO_LFS" = "xDO"
then
	AC_PATH_PROG(GETCONF, getconf)
	LFS_CFLAGS=`$GETCONF LFS_CFLAGS`
	LFS_LDFLAGS=`$GETCONF LFS_LDFLAGS`
	LFS_LIBS=`$GETCONF LFS_LIBS`
	AC_SUBST(LFS_CFLAGS)
	AC_SUBST(LFS_LDFLAGS)
	AC_SUBST(LFS_LFS_LIBS)
fi

AC_PATH_PROG(COMPRESS,compress,no-compress-found-during-configure)
AC_PATH_PROGS(GZIP,gzip,no-gzip-found-during-configure)
dnl
AC_ARG_WITH(log-compress,[  --with-log-compress=METHOD   Log compression method (default gzip)], LOG_COMPRESS=$with_log_compress, LOG_COMPRESS=gzip)
case "$LOG_COMPRESS" in
gzip)
	LOG_COMPRESS=$GZIP
	LOG_COMPRESSEXT=".gz" ;;
compress)
	LOG_COMPRESS=$COMPRESS
	LOG_COMPRESSEXT=".Z" ;;
*)
	LOG_COMPRESS=$LOG_COMPRESS
	LOG_COMPRESSEXT=".unknown" ;;
esac
AC_SUBST(LOG_COMPRESS)
AC_SUBST(LOG_COMPRESSEXT)
dnl
AC_ARG_ENABLE(tagged-hash,[  --enable-tagged-hash    use tagged hash table for history],
    if test "x$enableval" = xyes ; then
	DO_DBZ_TAGGED_HASH=DO
    else
	DO_DBZ_TAGGED_HASH=DONT
    fi)
if test "x$DO_LFS" = "xDO"
then
    if test "x$DO_DBZ_TAGGED_HASH" = "xDO"
    then
       AC_MSG_ERROR(--enable-tagged-hash and --with-largefiles can not be used at the same time.)
    fi
fi
AC_SUBST(DO_DBZ_TAGGED_HASH)
dnl Automatic check for Mail is frequently wrong.  Use innmail to have
dnl a single interface.
dnl AC_ENSURE_PATH_PROG(ac_cv_subst_path_mail,Mail)
dnl
dnl The sendmail code takes this philosophy:  We assume that there are some
dnl sites which don't have sendmail in the path for a reason, whatever that
dnl may be.  And we also assume that there are some of those sites which
dnl don't want us to automatically pick one from a likely place.  So
dnl we detect it, then search for it, but then notify the human.
dnl
if test "${with_sendmail+set}" = set
then
dnl don't change it!
echo using $SENDMAIL for sendmail
else
  AC_PATH_PROG(SENDMAIL,sendmail)
  if test "x$SENDMAIL" = x
  then
    echo No sendmail in path.  Looking in likely places.
    PATH=$PATH:/usr/lib:/usr/sbin:/usr/ucblib
    AC_PATH_PROG(SENDMAIL,sendmail)
    if test "x$SENDMAIL" = x
    then
       AC_MSG_ERROR(sendmail is a required program not found.  Run with --with-sendmail option.)
    else
       echo sendmail was found at $SENDMAIL.  If this is correct, re-run
	echo using --with-sendmail=$SENDMAIL
       AC_MSG_ERROR(sendmail is a required program not found in path.  Run with --with-sendmail option.)
    fi
  fi
fi
PATH="$ac_save_path"
dnl If the path mucking above must be done, redo the echo test.
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
  # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
    ac_n= ac_c='
' ac_t='	'
  else
    ac_n=-n ac_c= ac_t=
  fi
else
  ac_n= ac_c='\c' ac_t=
fi

dnl parse arguments

dnl Checks for libraries.
EXTRA_SRC=""
AC_CHECK_LIB(crypt,  crypt)
AC_CHECK_LIB(util,   setproctitle)
AC_CHECK_LIB(44bsd,  inet_addr)
AC_CHECK_LIB(bind,  __inet_addr)
AC_CHECK_LIB(resolv, gethostbyname, ac_need_libresolv=1, ac_try_bind=1)
AC_CHECK_LIB(resolv, inet_aton, ac_need_libresolv=1, ac_try_bind=1)
if test x$ac_need_libresolv = x1
then
LIBS="$LIBS -lresolv"
fi
if test x$ac_try_bind = x1
then
	AC_CHECK_LIB(bind, inet_aton, ac_need_extra_inet_aton=1)
	if test x$ac_need_extra_inet_aton = x
	then
		AC_CHECK_LIB(bind, __inet_aton, ac_need_extra__inet_aton=1)
		if test x$ac_need_extra__inet_aton = x
		then
			EXTRA_SRC="inet_addr.c"
		fi
	fi
fi
AC_CHECK_LIB(nsl, gethostbyname)
dnl Unisys system includes gethostbyname in libsocket but needs libnsl for socket
AC_CHECK_LIB(socket, socket, ac_need_libsocket=1, ac_try_nsl=1)
if test x$ac_need_libsocket = x1
then
LIBS="$LIBS -lsocket"
fi
if test x$ac_try_nsl = x1
then
	AC_CHECK_LIB(nsl, gethostbyname, ac_need_libnsl=1)
	if test x$ac_need_libnsl = x1
	then
		LIBS="$LIBS -lnsl"
	fi
fi
AC_CHECK_LIB(shadow, getspnam)
AC_CHECK_LIB(elf, nlist)
dnl AIX needs flock from libbsd
AC_CHECK_LIB(bsd,flock)
AC_CHECK_LIB(regex,regexec)
dnl Check for PERL location
if test x${DO_PERL} = xDO ; then
	AC_MSG_CHECKING(for Perl configuration)
	perl_core_path=`$_PATH_PERL -e 'use Config; print $Config{archlib}'`
	perl_core_libs=`$_PATH_PERL -MExtUtils::Embed -e ldopts | tail -1`
	for i in ${LIBS} ; do
	    perl_core_libs=`echo ${perl_core_libs} | sed -e "s/${i}//"`
	done
	PERL_LIB="-L${perl_core_path}/CORE ${perl_core_libs}"
	PERL_INC="-I${perl_core_path}/CORE"
	AC_MSG_RESULT($perl_core_path)
else
	PERL_LIB=""
	PERL_INC=""
fi
AC_SUBST(PERL_LIB)
AC_SUBST(PERL_INC)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h memory.h sgtty.h stdarg.h)
AC_CHECK_HEADERS(stdlib.h string.h sys/file.h sys/filio.h sys/ioctl.h)
AC_CHECK_HEADERS(sys/select.h sys/signal.h sys/time.h syslog.h unistd.h)
AC_CHECK_HEADERS(varargs.h dirent.h wait.h getopt.h sys/sysinfo.h)

# Digital Unix malloc.h looks pretty broken (no function declarations).
if test X${DECUNIX} = Xyes
then
AC_MSG_WARN(not checking for malloc.h as this is Digital Unix)
else
AC_CHECK_HEADERS(malloc.h)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_ST_BLKSIZE
AC_STRUCT_TM
AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_CACHE_CHECK(for atomical variable, ac_cv_type_atomic, AC_TRY_COMPILE([#include <signal.h>
#ifdef HAVE_SYS_SIGNAL_H
#include <sys/signal.h>
#endif],[sig_atomic_t i],ac_cv_type_atomic=sig_atomic_t,ac_cv_type_atomic=int))
AC_SUBST(ac_cv_type_atomic)

AC_MSG_CHECKING(for tm_gmtoff in struct tm)
AC_TRY_LINK([#include <time.h>],
	[struct tm t; t.tm_gmtoff = 0],
	[AC_DEFINE(HAVE_TM_GMTOFF) AC_MSG_RESULT(yes)],
	AC_MSG_RESULT(no))

AC_MSG_CHECKING(for union wait)
AC_TRY_LINK([#ifdef HAVE_WAIT_H
# include <wait.h>
#else
# include <sys/wait.h>
#endif],
	[union wait w],
	[AC_DEFINE(HAVE_UNION_WAIT) AC_MSG_RESULT(yes)],
	AC_MSG_RESULT(no))

# Size of integers
AC_CHECK_SIZEOF(int)
if test $ac_cv_sizeof_int = 4; then
	ac_cv_subst_int32_t=int
else
	AC_CHECK_SIZEOF(long)
	if test $ac_cv_sizeof_long = 4; then
		ac_cv_subst_int32_t=long
	else
		AC_CHECK_SIZEOF(short)
		if test $ac_cv_sizeof_short = 4; then
			ac_cv_subst_int32_t=short
		else
			AC_MSG_ERROR(No 32bits integer available!)
		fi
	fi
fi
AC_SUBST(ac_cv_subst_int32_t)

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_SUBST(ac_cv_type_signal)
AC_FUNC_VFORK
AC_FUNC_VPRINTF
dnl Actually INN doesn't care about the rusage argument AC_FUNC_WAIT3
AC_CHECK_FUNCS(fchmod getdtab gethostname getrlimit getrusage)
AC_CHECK_FUNCS(gettimeofday memchr memcmp memcpy memmove memset)
AC_CHECK_FUNCS(mkdir mkfifo mktemp select setbuffer setproctitle)
AC_CHECK_FUNCS(setsid socket strcasecmp strchr strcspn strerror)
AC_CHECK_FUNCS(strrchr strspn strstr symlink sysconf syslog ulimit)
AC_CHECK_FUNCS(waitpid socketpair getpagesize getspnam)
AC_CHECK_FUNCS(statvfs, [AC_DEFINE(HAVE_STATVFS)], [AC_CHECK_FUNCS(statfs) AC_CHECK_HEADERS(sys/vfs.h, AC_DEFINE(HAVE_SYS_VFS_H)) AC_CHECK_HEADERS(sys/param.h, AC_DEFINE(HAVE_SYS_PARAM_H)) AC_CHECK_HEADERS(sys/mount.h, AC_DEFINE(HAVE_SYS_MOUNT_H))])


dnl This portion is similar to what AC_FUNC_MMAP does, only
dnl it tests shared, non-fixed mmaps.

AC_CACHE_CHECK(for working mmap, ac_cv_func_mmap_shared,
[AC_TRY_RUN([
/* test shared mmap */
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

/* This mess was copied from the GNU getpagesize.h.  */
#ifndef HAVE_GETPAGESIZE
# ifdef HAVE_UNISTD_H
#  include <unistd.h>
# endif

/* Assume that all systems that can run configure have sys/param.h.  */
# ifndef HAVE_SYS_PARAM_H
#  define HAVE_SYS_PARAM_H 1
# endif

# ifdef _SC_PAGESIZE
#  define getpagesize() sysconf(_SC_PAGESIZE)
# else /* no _SC_PAGESIZE */
#  ifdef HAVE_SYS_PARAM_H
#   include <sys/param.h>
#   ifdef EXEC_PAGESIZE
#    define getpagesize() EXEC_PAGESIZE
#   else /* no EXEC_PAGESIZE */
#    ifdef NBPG
#     define getpagesize() NBPG * CLSIZE
#     ifndef CLSIZE
#      define CLSIZE 1
#     endif /* no CLSIZE */
#    else /* no NBPG */
#     ifdef NBPC
#      define getpagesize() NBPC
#     else /* no NBPC */
#      ifdef PAGESIZE
#       define getpagesize() PAGESIZE
#      endif /* PAGESIZE */
#     endif /* no NBPC */
#    endif /* no NBPG */
#   endif /* no EXEC_PAGESIZE */
#  else /* no HAVE_SYS_PARAM_H */
#   define getpagesize() 8192   /* punt totally */
#  endif /* no HAVE_SYS_PARAM_H */
# endif /* no _SC_PAGESIZE */

#endif /* no HAVE_GETPAGESIZE */

#ifdef __cplusplus
extern "C" { void *malloc(unsigned); }
#else
char *malloc();
#endif

int
main()
{
        char *data, *data2;
        int i, pagesize;
        int fd;

        pagesize = getpagesize();

        /*
         * First, make a file with some known garbage in it.
         */
        data = malloc(pagesize);
        if (!data)
                exit(1);
        for (i = 0; i < pagesize; ++i)
                *(data + i) = rand();
        umask(0);
        fd = creat("conftestmmaps", 0600);
        if (fd < 0)
                exit(1);
        if (write(fd, data, pagesize) != pagesize)
                exit(1);
        close(fd);

        /*
         * Next, try to mmap the file.  If we can,
         * also make sure that we see the same garbage.
         */
        fd = open("conftestmmaps", O_RDWR);
        if (fd < 0)
                exit(1);
        if (! (data2 = mmap((void*)0, pagesize, PROT_READ | PROT_WRITE,
            MAP_SHARED, fd, 0L)) )
                exit(1);
        for (i = 0; i < pagesize; ++i)
                if (*(data + i) != *(data2 + i))
                        exit(1);

        close(fd);
        unlink("conftestmmaps");
        exit(0);
}
], ac_cv_func_mmap_shared=yes, ac_cv_func_mmap_shared=no,
ac_cv_func_mmap_shared=no)])
if test $ac_cv_func_mmap_shared = yes; then
  AC_DEFINE(HAVE_MMAP)
  AC_CHECK_FUNCS(madvise, AC_DEFINE(HAVE_MADVISE))
fi

AC_CACHE_CHECK(whether msync is needed, ac_cv_func_need_msync,
[AC_TRY_RUN([
/* test shared mmap (msync) */
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

/* This mess was copied from the GNU getpagesize.h.  */
#ifndef HAVE_GETPAGESIZE
# ifdef HAVE_UNISTD_H
#  include <unistd.h>
# endif

/* Assume that all systems that can run configure have sys/param.h.  */
# ifndef HAVE_SYS_PARAM_H
#  define HAVE_SYS_PARAM_H 1
# endif

# ifdef _SC_PAGESIZE
#  define getpagesize() sysconf(_SC_PAGESIZE)
# else /* no _SC_PAGESIZE */
#  ifdef HAVE_SYS_PARAM_H
#   include <sys/param.h>
#   ifdef EXEC_PAGESIZE
#    define getpagesize() EXEC_PAGESIZE
#   else /* no EXEC_PAGESIZE */
#    ifdef NBPG
#     define getpagesize() NBPG * CLSIZE
#     ifndef CLSIZE
#      define CLSIZE 1
#     endif /* no CLSIZE */
#    else /* no NBPG */
#     ifdef NBPC
#      define getpagesize() NBPC
#     else /* no NBPC */
#      ifdef PAGESIZE
#       define getpagesize() PAGESIZE
#      endif /* PAGESIZE */
#     endif /* no NBPC */
#    endif /* no NBPG */
#   endif /* no EXEC_PAGESIZE */
#  else /* no HAVE_SYS_PARAM_H */
#   define getpagesize() 8192   /* punt totally */
#  endif /* no HAVE_SYS_PARAM_H */
# endif /* no _SC_PAGESIZE */

#endif /* no HAVE_GETPAGESIZE */

#ifdef __cplusplus
extern "C" { void *malloc(unsigned); }
#else
char *malloc();
#endif

int
main()
{
        char *data, *data2, *data3;
        int i, pagesize;
        int fd, rval;

        pagesize = getpagesize();

        /*
         * First, make a file with some known garbage in it.
         */
        data = malloc(pagesize);
        if (!data)
                exit(1);
        for (i = 0; i < pagesize; ++i)
                *(data + i) = rand();
        umask(0);
        fd = creat("conftestmmapm", 0600);
        if (fd < 0)
                exit(1);
        if (write(fd, data, pagesize) != pagesize)
                exit(1);
        close(fd);

        /*
         * Next, try to mmap the file.
         */
        fd = open("conftestmmapm", O_RDWR);
        if (fd < 0)
                exit(1);
        if (! (data2 = mmap((void*)0, pagesize, PROT_READ | PROT_WRITE,
            MAP_SHARED, fd, 0L)) )
                exit(1);

        /*
         * Finally, see if changes to the mapped area automatically
         * percolate back to the file as seen by read().
         * I.E., msync is not needed
         */
	rval = 0;
        for (i = 0; i < pagesize; ++i)
                *(data2 + i) = *(data2 + i) + 1;
        data3 = malloc(pagesize);
        if (!data3)
                exit(1);
        if (read(fd, data3, pagesize) != pagesize)
                exit(1);
        for (i = 0; i < pagesize; ++i)
                if (*(data + i) != *(data3 + i))
                        rval = 1;
        close(fd);
        unlink("conftestmmapm");
        exit(rval);
}
], ac_cv_func_need_msync=yes, ac_cv_func_need_msync=no,
ac_cv_func_need_msync=no)])

dnl
if test $ac_cv_lib_regex_regexec = no; then
	AC_CHECK_FUNC(regexec,[DO_KEYWORDS=DO],[DO_KEYWORDS=DONT])
fi
AC_SUBST(DO_KEYWORDS)

AC_MSG_CHECKING(for msync args)
AC_TRY_LINK([#include <sys/types.h>
#include <sys/mman.h>],
            [char *p; int psize; msync(p,psize,MS_ASYNC); ],
            [AC_DEFINE(HAVE_MSYNC_3_ARG) AC_MSG_RESULT(3 args)],
            AC_MSG_RESULT(no))

dnl
AC_CACHE_CHECK(for return type of abort, ac_cv_type_abort, AC_TRY_COMPILE([#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif],[int a;a=abort()],ac_cv_type_abort=int,ac_cv_type_abort=void))
AC_SUBST(ac_cv_type_abort)
AC_CACHE_CHECK(for return type of alarm, ac_cv_type_alarm, AC_TRY_COMPILE([#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif],[unsigned int alarm()],ac_cv_type_alarm="unsigned int",ac_cv_type_alarm=int))
AC_SUBST(ac_cv_type_alarm)
AC_CACHE_CHECK(for return type of sleep, ac_cv_type_sleep, AC_TRY_COMPILE([#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif],[unsigned int sleep()],ac_cv_type_sleep="unsigned int",ac_cv_type_sleep=int))
AC_SUBST(ac_cv_type_sleep)
AC_CACHE_CHECK(for return type of qsort, ac_cv_type_qsort, AC_TRY_COMPILE([#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif],[int a;a=qsort(0,0,0,0)],ac_cv_type_qsort=int,ac_cv_type_qsort=void))
AC_SUBST(ac_cv_type_qsort)
AC_CACHE_CHECK(for return type of free, ac_cv_type_free, AC_TRY_COMPILE([#ifdef _AIX41
#include <stdlib.h>
#else
#ifdef HAVE_MALLOC_H
#include <malloc.h>
#else
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
#endif
#endif],[int a;a=free(0)],ac_cv_type_free=int,ac_cv_type_free=void))
AC_SUBST(ac_cv_type_free)
AC_CACHE_CHECK(for return type of exit, ac_cv_type_exit, AC_TRY_COMPILE([#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif],[int a;a=exit(0)],ac_cv_type_exit=int,ac_cv_type_exit=void))
AC_SUBST(ac_cv_type_exit)
AC_CACHE_CHECK(for return type of _exit, ac_cv_type__exit, AC_TRY_COMPILE([#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif],[int a;a=_exit(0)],ac_cv_type__exit=int,ac_cv_type__exit=void))
AC_SUBST(ac_cv_type__exit)

dnl Locking style
AC_CHECK_FUNCS(flock lockf fcntl)

dnl Macros check
AC_MSG_CHECKING(for AF_UNIX)
AC_EGREP_CPP(yes, [#include <sys/socket.h>
#ifdef AF_UNIX
yes
#endif], 
	[AC_DEFINE(HAVE_UNIX_DOMAIN_SOCKETS) AC_MSG_RESULT(yes)], 
	AC_MSG_RESULT(no))

dnl ********************************************
dnl Close-on-exec style.....fjc mibsoftware.com
AC_MSG_CHECKING(for close on exec style)
CLX_STYLE=pre_test
if test $ac_cv_header_fcntl_h = yes; then
	AC_EGREP_CPP(yes, [#include <fcntl.h>
#ifdef FD_CLOEXEC
yes
#else
# ifdef F_SETFD
yes
# endif
#endif], [AC_DEFINE(CLX_FCNTL) AC_MSG_RESULT(FCNTL)], CLX_STYLE=unknown)
else
	CLX_STYLE=unknown
fi

if test ${CLX_STYLE} = "unknown"
then
CLX_STYLE=pre_test
if test $ac_cv_header_sys_filio_h = yes; then
	AC_EGREP_CPP(yes, [#include <sys/filio.h>
#ifdef FIOCLEX
yes
#endif], [AC_DEFINE(CLX_IOCTL) AC_MSG_RESULT(IOCTL)], CLX_STYLE=unknown)
else
	CLX_STYLE=unknown
fi
fi

if test ${CLX_STYLE} = "unknown"
then
	AC_MSG_ERROR(Must set CLX_STYLE)
fi
dnl ********************************************


dnl ********************************************
dnl Non-blocking I/O style.....fjc mibsoftware.com
dnl Want to avoid fcntl(FNDELAY) which is inconsistent.
dnl if O_NONBLOCK is present we use that.
dnl fall back to FIONBIO
AC_MSG_CHECKING(for nbio style)
NBIO_STYLE=pre_test
if test $ac_cv_header_fcntl_h = yes; then
	AC_EGREP_CPP(yes, [#include <fcntl.h>
#ifdef O_NONBLOCK
yes
#endif], [AC_DEFINE(NBIO_FCNTL) AC_MSG_RESULT(FCNTL)], NBIO_STYLE=unknown)
else
	NBIO_STYLE=unknown
fi

if test $NBIO_STYLE = unknown; then
NBIO_STYLE=pre_test
if test $ac_cv_header_sys_filio_h = yes; then
	AC_EGREP_CPP(yes, [#include <sys/filio.h>
#ifdef FIONBIO
yes
#endif], [AC_DEFINE(NBIO_IOCTL) AC_MSG_RESULT(IOCTL)], NBIO_STYLE=unknown)
else
	NBIO_STYLE=unknown
fi
fi

if test $NBIO_STYLE = "unknown"
then
	AC_MSG_ERROR(Must set NBIO_STYLE)
fi

dnl ***************************************************


dnl ***************************************************
dnl Non-standard checks
AC_MSG_CHECKING(log level for news)
AC_EGREP_CPP(yes, [#include <syslog.h>
#ifdef LOG_NEWS
yes
#endif
], 
	[AC_DEFINE(FACILITY_NEWS) AC_MSG_RESULT(LOG_NEWS)], 
	AC_MSG_RESULT(LOG_LOCAL1))

AC_CACHE_CHECK(generic pointer, ac_cv_type_generic,
AC_TRY_COMPILE([#ifdef _AIX41
#include <stdlib.h>
#else
#ifdef HAVE_MALLOC_H
#include <malloc.h>
#else
#include <stdlib.h>
#endif
#endif],[void *a; a = malloc(sizeof(a))], ac_cv_type_generic=void,
ac_cv_type_generic=char));
AC_SUBST(ac_cv_type_generic)


dnl ***************************************************
dnl Convert a yes no value to a ac_cv_subst value which
dnl is not already overridden by config.cache
AC_DEFUN(YN_to_cv_subst, [
if test "x${$2}" = "x"
then
dnl Not already set....
if test x${$1} = "xno"
then
    echo setting $2...$4 
	$2=$4
else
    if test x${$1} = "xyes"
    then
	    echo setting $2...$3
	    $2=$3
	else
	    AC_MSG_ERROR($1 = ${$1}. Must be yes or no)
	fi
fi
else
    echo "setting $2... (cached) ${$2}" 
fi
AC_SUBST($2)])
dnl ***************************************************


dnl ***************************************************
dnl Convert an enumerated value to a ac_cv_subst value which
dnl is not already overridden by config.cache
AC_DEFUN(convert_to_cv_subst, [
if test "x${$2}" = "x"
then
dnl Not already set....
if test ${$1} = "$3"
then
    echo setting $2...$4 
	$2=$4
else
    if test ${$1} = $5
    then
	    echo setting $2...$6
	    $2=$6
	else
	    AC_MSG_ERROR($1 = ${$1}. Must be $3 or $4)
	fi
fi
else
    echo "setting $2... (cached) ${$2}" 
fi
AC_SUBST($2)])


dnl ***************************************************
if test ${ac_cv_type_uid_t} = "no"; then
dnl DEBUG: should cache check these first!
	ac_cv_subst_uid_t=int
	ac_cv_subst_gid_t=int
else
dnl DEBUG: should cache check these first!
	ac_cv_subst_uid_t=uid_t
	ac_cv_subst_gid_t=gid_t
fi
AC_SUBST(ac_cv_subst_uid_t)
AC_SUBST(ac_cv_subst_gid_t)
dnl ***************************************************


dnl ***************************************************
dnl DEBUG: should check for predefined ac_cv_subst_fdcount_style
dnl fjc mibsoftware.com Removed getrlimit.  Prefer SYSCONF
if test ${ac_cv_func_getdtab} = "no"; then
	if test ${ac_cv_func_sysconf} = "no"; then
		if test ${ac_cv_func_ulimit} = "no"; then
			ac_cv_subst_fdcount_style=CONSTANT
		else
			ac_cv_subst_fdcount_style=ULIMIT
		fi
	else
		ac_cv_subst_fdcount_style=SYSCONF
    fi
else
	ac_cv_subst_fdcount_style=GETDTAB
fi
AC_SUBST(ac_cv_subst_fdcount_style)
dnl ***************************************************


dnl ***************************************************
dnl Convert ac_cv_ yes or no values into subst values for config.data
dnl (but only if the cv_subst value is not already defined.  This is
dnl to permit overriding in config.cache
YN_to_cv_subst(ac_cv_type_size_t, ac_cv_subst_size_t, size_t, unsigned)
YN_to_cv_subst(ac_cv_type_pid_t, ac_cv_subst_pid_t, pid_t, int)
YN_to_cv_subst(ac_cv_type_off_t, ac_cv_subst_lseekval, off_t, long)
YN_to_cv_subst(ac_cv_func_getrusage, ac_cv_subst_res_style, RUSAGE, TIMES)
YN_to_cv_subst(ac_cv_header_time, ac_cv_subst_need_time, DO, DONT)
YN_to_cv_subst(ac_cv_func_mmap_shared, ac_cv_subst_act_style, MMAP, READ)
YN_to_cv_subst(ac_cv_func_need_msync, ac_cv_subst_mmap_sync, DO, DONT)

dnl Missing sources
MISSING_MAN=""
MISSING_SRC=""
MISSING_OBJ=""
if test ${ac_cv_func_strcasecmp} = "no"
then
	MISSING_MAN="strcasecmp.3 "
	MISSING_SRC="strcasecmp.c "
	MISSING_OBJ="strcasecmp.o "
fi
if test ${ac_cv_func_syslog} = "no"
then
	MISSING_MAN="${MISSING_MAN}syslog.3 "
	MISSING_SRC="${MISSING_SRC}syslog.c "
	MISSING_OBJ="${MISSING_OBJ}syslog.o "
fi

case "$inn_cv_sys_os" in
   SCO*)
 	MISSING_MAN=""
 	MISSING_SRC=""
	MISSING_OBJ=""
   ;;
   UnixWare*)
 	MISSING_MAN=""
 	MISSING_SRC=""
 	MISSING_OBJ=""
   ;;
 esac

if test ${ac_cv_func_strerror} = "no"
then
	MISSING_SRC="${MISSING_SRC}strerror.c "
	MISSING_OBJ="${MISSING_OBJ}strerror.o "
	EXTRA_SRC="${EXTRA_SRC} strerror.c"
fi
dnl *******************************************************
dnl fjc mibsoftware.com getdtab is a fixed part of INN now.
dnl if test ${ac_cv_func_getdtab} = "no"
dnl then
dnl	MISSING_SRC="${MISSING_SRC}getdtab.c "
dnl 	MISSING_OBJ="${MISSING_OBJ}getdtab.o "
dnl fi
if test ${ac_cv_func_mktemp} = "no"
then
	MISSING_SRC="${MISSING_SRC}mktemp.c "
	MISSING_OBJ="${MISSING_OBJ}mktemp.o "
fi
if test ${ac_cv_func_memcpy} = "no"
then
	MISSING_SRC="${MISSING_SRC}memcpy.c "
	MISSING_OBJ="${MISSING_OBJ}memcpy.o "
fi
if test ${ac_cv_func_memmove} = "no"
then
	MISSING_SRC="${MISSING_SRC}memmove.c "
	MISSING_OBJ="${MISSING_OBJ}memmove.o "
fi
if test ${ac_cv_func_memchr} = "no"
then
	MISSING_SRC="${MISSING_SRC}memchr.c "
	MISSING_OBJ="${MISSING_OBJ}memchr.o "
fi
if test ${ac_cv_func_memcmp} = "no"
then
	MISSING_SRC="${MISSING_SRC}memcmp.c "
	MISSING_OBJ="${MISSING_OBJ}memcmp.o "
fi
if test ${ac_cv_func_memset} = "no"
then
	MISSING_SRC="${MISSING_SRC}memset.c "
	MISSING_OBJ="${MISSING_OBJ}memset.o "
fi
if test ${ac_cv_func_strchr} = "no"
then
	MISSING_SRC="${MISSING_SRC}strchr.c "
	MISSING_OBJ="${MISSING_OBJ}strchr.o "
fi
if test ${ac_cv_func_strrchr} = "no"
then
	MISSING_SRC="${MISSING_SRC}strrchr.c "
	MISSING_OBJ="${MISSING_OBJ}strrchr.o "
fi
AC_SUBST(MISSING_MAN)
AC_SUBST(MISSING_SRC)
AC_SUBST(MISSING_OBJ)
AC_SUBST(EXTRA_SRC)

grep "^  ||" config/config.scoreboard | sed 's/  ||//g' >config/config.data.in
AC_CONFIG_HEADER(include/config.h:include/config.h)
AC_OUTPUT(
	Makefile.global 
	makedirs.sh 
	config/config.data 
	backends/actmerge.sh
	backends/actsyncd.sh
	backends/sendxbatches.sh
	frontends/c7unbatch.sh
	frontends/gunbatch.sh
	include/clibrary.h
	include/config.h
	include/paths.h 
	innfeed/innfeed-convcfg
	innfeed/procbatch
	samples/actsync.cfg 
	samples/checkgroups
	samples/checkgroups.pl
	samples/cnfsstat
	samples/controlbatch
	samples/controlchan
	samples/default
	samples/docheckgroups
	samples/expirerm
	samples/ihave
	samples/ihave.pl
	samples/inn.conf
	samples/inncheck 
	samples/innmail
	samples/innreport
	samples/innreport.conf 
	samples/innshellvars 
	samples/innshellvars.pl 
	samples/innshellvars.tcl 
	samples/innstat
	samples/innwatch
	samples/innwatch.ctl 
	samples/mailpost
	samples/mod-active
	samples/news2mail
	samples/news.daily
	samples/newgroup
	samples/newgroup.pl
	samples/newsfeeds
	samples/nnrpd_auth.pl
	samples/nntpsend
	samples/parsecontrol
	samples/pgpverify
	samples/pullnews
	samples/rc.news
	samples/rmgroup
	samples/rmgroup.pl
	samples/scanlogs
	samples/scanspool
	samples/send-ihave
	samples/send-nntp
	samples/send-uucp
	samples/sendbatch
	samples/sendme
	samples/sendme.pl
	samples/sendsys
	samples/sendsys.pl
	samples/senduuname
	samples/senduuname.pl
	samples/signcontrol
	samples/simpleftp
	samples/startup.tcl 
	samples/tally.control
	samples/version
	samples/version.pl
	samples/writelog
	storage/buildconfig 
	syslog/syslog.conf
	,
	chmod +x storage/buildconfig
)

cat .now_do
