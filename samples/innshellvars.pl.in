# 
# Author:       James Brister <brister@vix.com> -- berkeley-unix --
# Start Date:   Sat, 24 Aug 1996 22:08:19 +0200
# Project:      INN 
# File:         innshellvars.pl
# RCSId:        $Id$
# Description:  Set up any and all variables that an INN perl script
#               might need.

package inn ;

eval `@prefix@/bin/innconfval -p`;

$newshome = $pathnews;
$spooldir = $pathspool;
$most_logs = $pathlog;

$errlog = "${most_logs}/errlog" ;
$log = "${most_logs}/news" ;

$spool = $patharticles;
$overviewdir = $pathoverview;
$archivedir = $patharchive;
$badnews = "$pathincoming/bad";
$spoolnews = $pathincoming;
$batch = $pathoutgoing;
$incoming = $pathincoming;

$locks = $pathrun;
$newsbin = $pathbin;
$innddir = $pathrun;
$newslib = $pathetc;
$newslbin = "$pathnews/local";

$active = "${pathdb}/active" ;
$activetimes = "${pathdb}/active.times" ;
$ctlfile = "${newslib}/control.ctl" ;
$ctlwatch = "${newslib}/innwatch.ctl" ;
$history = "${pathdb}/history" ;
$newactive = "${pathdb}/active.tmp" ;
$newsfeeds = "${newslib}/newsfeeds" ;
$newsgroups = "${pathdb}/newsgroups" ;
$oldactive = "${pathdb}/active.old" ;
$path_motd = "${newslib}/motd.news" ;
$path_storagectl = "${newslib}/storage.ctl" ;
$path_overviewctl = "${newslib}/overview.ctl" ;
$localgroups = "$newslib/localgroups" ;
$expirectl = "${newslib}/expire.ctl" ;

$controlprogs = $pathcontrol;
$inews = "${newsbin}/inews" ;
$innconfval = "${newsbin}/innconfval" ;
$innd = "${newsbin}/innd" ;
$inndstart = "${newsbin}/inndstart" ;
$innwatch = "${newsbin}/innwatch" ;
$rnews = "${newsbin}/rnews" ;
$perl_startup_innd = "$pathfilter/startup_innd.pl" ;
$perl_filter_innd = "$pathfilter/filter_innd.pl" ;
$perl_filter_nnrpd = "$pathfilter/filter_nnrpd.pl" ;
$path_tcl_startup = "$pathfilter/startup.tcl" ;
$path_tcl_filter = "$pathfilter/filter.tcl" ;

$daily = "${locks}/LOCK.news.daily" ;

$newscontrol = "${innddir}/control" ;
$nntpconnect = "${innddir}/nntpin" ;
$serverpid = "${innddir}/innd.pid" ;
$innwstatus = "${innddir}/innwatch.status" ;
$watchpid = "${innddir}/innwatch.pid" ;

$awk = "@_PATH_AWK@" ;
$sed = "@_PATH_SED@" ;
$inndf = "@_PATH_DF@" ;
$egrep = "@_PATH_EGREP@" ;
$perl = "@_PATH_PERL@" ;
$pgp = "@_PATH_PGP@" ;
$sort = "@_PATH_SORT@" ;
$compress = "@_PATH_COMPRESS@" ;
$log_compress = "@_PATH_COMPRESS@" ;
$z = "@LOG_COMPRESSEXT@" ;

($tempsock = "${innddir}/ctlinndXXXXXX") =~ s!.*/(.*)XXXXXX$!$1*! ;
($tempsockdir = "${innddir}/ctlinndXXXXXX") =~ s!/[^/]*$!! ;

##  =()<$cycles = @<LOG_CYCLES>@ ;>()=
$cycles = 3 ;

##  =()<$have_uustat = ("@<HAVE_UUSTAT>@" eq "DO" ? 1 : 0) ;>()=
$have_uustat = ("DO" eq "DO" ? 1 : 0) ;

##  =()<$mail_badcontrols = ("@<MAIL_BADCONTROLS>@" eq "DO" ? 1 : 0) ;>()=
$mail_badcontrols = ("DONT" eq "DO" ? 1 : 0) ;

$newsmaster = '@NEWSMASTER@' ;
$newsuser = "@NEWSUSER@" ;

##  =()<$sleeptime = @<INNWATCH_SLEEPTIME>@ ;>()=
$sleeptime = 600 ;

##  =()<$want_pgpverify = ("@<WANT_PGPVERIFY>@" eq "DO" ? 1 : 0) ;>()=
$want_pgpverify = ("DO" eq "DO" ? 1 : 0) ;

##  =()<$perl_support = ("@<PERL_SUPPORT>@" eq "DO" ? 1 : 0) ;>()=
$perl_support = ("DONT" eq "DO" ? 1 : 0) ;

##  =()<$tcl_support = ("@<TCL_SUPPORT>@" eq "DO" ? 1 : 0) ;>()=
$tcl_support = ("DONT" eq "DO" ? 1 : 0) ;

if ( ! defined ($ENV{'TMPDIR'}) ) {
	$ENV{'TMPDIR'} = "@TMPPATH@" ;
} 
$tmpdir = $ENV{'TMPDIR'} ;

$spooltemp = "@TMPPATH@" ;

##  =()<$umask = @<NEWSUMASK>@ ;>()=
$umask = 02 ;

$ENV{'PATH'} = "${newslbin}:${newsbin}:$ENV{'PATH'}:/bin:/usr/bin:/usr/ucb" ;

1 ;
